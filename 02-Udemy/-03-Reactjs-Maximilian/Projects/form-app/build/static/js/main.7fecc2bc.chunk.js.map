{"version":3,"sources":["hooks/use-input.js","components/BasicForm.js","App.js","index.js"],"names":["initialInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validateValue","useReducer","inputState","dispatch","valueIsValid","hasError","isValid","valueChangeHandler","e","target","inputBlurHandler","reset","isNotEmpty","trim","isEmail","includes","BasicForm","props","enteredFirstName","enteredFirstNameIsValid","firstNameInputHasError","firstNameChangeHandler","firstNameBlurHandler","resetFirstName","enteredLastName","enteredLastNameIsValid","lastNameInputHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangedHandler","emailBlurHandler","resetEmail","formIsValid","firstNameClasses","lastNameClasses","emailClasses","onSubmit","preventDefault","console","log","className","htmlFor","id","onChange","onBlur","disabled","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"yMAEMA,EAAoB,CACxBC,MAAO,GACPC,WAAW,GAGPC,EAAoB,SAApBA,EAAqBC,EAAOC,GAChC,MAAoB,UAAhBA,EAAOC,KACF,CACLL,MAAOI,EAAOJ,MACdC,UAAWE,EAAMF,WAID,SAAhBG,EAAOC,KACF,CACLJ,WAAW,EACXD,MAAOG,EAAMH,OAIG,UAAhBI,EAAOC,KACF,CACLJ,WAAW,EACXD,MAAO,IAIJE,GAwCMI,EArCE,SAACC,GAChB,MAA+BC,qBAC7BN,EACAH,GAFF,mBAAOU,EAAP,KAAmBC,EAAnB,KAKMC,EAAeJ,EAAcE,EAAWT,OACxCY,GAAYD,GAAgBF,EAAWR,UAoB7C,MAAO,CACLD,MAAOS,EAAWT,MAClBa,QAASF,EACTC,WACAE,mBAtByB,SAACC,GAC1BL,EAAS,CACPL,KAAM,QACNL,MAAOe,EAAEC,OAAOhB,SAoBlBiB,iBAjBuB,SAACF,GACxBL,EAAS,CACPL,KAAM,UAgBRa,MAZY,WACZR,EAAS,CACPL,KAAM,a,OCrDNc,EAAa,SAACnB,GAAD,MAA4B,KAAjBA,EAAMoB,QAC9BC,EAAU,SAACrB,GAAD,OAAWA,EAAMsB,SAAS,MAkH3BC,EAhHG,SAACC,GACjB,MAOIlB,EAASa,GANJM,EADT,EACEzB,MACS0B,EAFX,EAEEb,QACUc,EAHZ,EAGEf,SACoBgB,EAJtB,EAIEd,mBACkBe,EALpB,EAKEZ,iBACOa,EANT,EAMEZ,MAGF,EAOIZ,EAASa,GANJY,EADT,EACE/B,MACSgC,EAFX,EAEEnB,QACUoB,EAHZ,EAGErB,SACoBsB,EAJtB,EAIEpB,mBACkBqB,EALpB,EAKElB,iBACOmB,EANT,EAMElB,MAGF,EAOIZ,EAASe,GANJgB,EADT,EACErC,MACSsC,EAFX,EAEEzB,QACU0B,EAHZ,EAGE3B,SACoB4B,EAJtB,EAIE1B,mBACkB2B,EALpB,EAKExB,iBACOyB,EANT,EAMExB,MAGEyB,GAAc,EAGhBjB,GACAM,GACAM,IAEAK,GAAc,GAGhB,IAcMC,EAAmBjB,EACrB,uBACA,eACEkB,EAAkBZ,EACpB,uBACA,eACEa,EAAeP,EACjB,uBACA,eAEJ,OACE,uBAAMQ,SAzBc,SAAChC,GACrBA,EAAEiC,iBAEGL,IAILM,QAAQC,IAAIzB,EAAkBM,EAAiBM,GAE/CP,IACAM,IACAM,MAcA,UACE,sBAAKS,UAAU,gBAAf,UACE,sBAAKA,UAAWP,EAAhB,UACE,uBAAOQ,QAAQ,OAAf,wBACA,uBACE/C,KAAK,OACLgD,GAAG,OACHrD,MAAOyB,EACP6B,SAAU1B,EACV2B,OAAQ1B,IAETF,GACC,mBAAGwB,UAAU,aAAb,2CAGJ,sBAAKA,UAAWN,EAAhB,UACE,uBAAOO,QAAQ,OAAf,uBACA,uBACE/C,KAAK,OACLgD,GAAG,OACHrD,MAAO+B,EACPuB,SAAUpB,EACVqB,OAAQpB,IAETF,GACC,mBAAGkB,UAAU,aAAb,6CAIN,sBAAKA,UAAWL,EAAhB,UACE,uBAAOM,QAAQ,OAAf,4BACA,uBACE/C,KAAK,OACLgD,GAAG,OACHrD,MAAOqC,EACPiB,SAAUd,EACVe,OAAQd,IAETF,GACC,mBAAGY,UAAU,aAAb,6CAGJ,qBAAKA,UAAU,eAAf,SACE,wBAAQK,UAAWb,EAAnB,0BCrGOc,MARf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCAOO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.7fecc2bc.chunk.js","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initialInputState = {\r\n  value: \"\",\r\n  isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n  if (action.type === \"INPUT\") {\r\n    return {\r\n      value: action.value,\r\n      isTouched: state.isTouched,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"BLUR\") {\r\n    return {\r\n      isTouched: true,\r\n      value: state.value,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"RESET\") {\r\n    return {\r\n      isTouched: false,\r\n      value: \"\",\r\n    };\r\n  }\r\n\r\n  return inputStateReducer;\r\n};\r\n\r\nconst useInput = (validateValue) => {\r\n  const [inputState, dispatch] = useReducer(\r\n    inputStateReducer,\r\n    initialInputState\r\n  );\r\n\r\n  const valueIsValid = validateValue(inputState.value);\r\n  const hasError = !valueIsValid && inputState.isTouched;\r\n\r\n  const valueChangeHandler = (e) => {\r\n    dispatch({\r\n      type: \"INPUT\",\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  const inputBlurHandler = (e) => {\r\n    dispatch({\r\n      type: \"BLUR\",\r\n    });\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch({\r\n      type: \"RESET\",\r\n    });\r\n  };\r\n\r\n  return {\r\n    value: inputState.value,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import useInput from \"../hooks/use-input\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\nconst isEmail = (value) => value.includes(\"@\");\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(isEmail);\n\n  let formIsValid = false;\n\n  if (\n    enteredFirstNameIsValid &&\n    enteredLastNameIsValid &&\n    enteredEmailIsValid\n  ) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log(enteredFirstName, enteredLastName, enteredEmail);\n\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  const firstNameClasses = firstNameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const lastNameClasses = lastNameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={enteredFirstName}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n          {firstNameInputHasError && (\n            <p className=\"error-text\">Please enter a first name.</p>\n          )}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={enteredLastName}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n          />\n          {lastNameInputHasError && (\n            <p className=\"error-text\">Please enter a last name.</p>\n          )}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredEmail}\n          onChange={emailChangedHandler}\n          onBlur={emailBlurHandler}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Please enter a valid e-mail.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import BasicForm from \"./components/BasicForm\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}